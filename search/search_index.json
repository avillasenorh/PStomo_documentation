{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PStomo documentation PStomo is a computer program for performing local earthquake and controlled source travel time tomography with simultaneous inversion for P- and S-wave velocity structure, hypocentral parameters or static corrections.","title":"Home"},{"location":"#pstomo-documentation","text":"PStomo is a computer program for performing local earthquake and controlled source travel time tomography with simultaneous inversion for P- and S-wave velocity structure, hypocentral parameters or static corrections.","title":"PStomo documentation"},{"location":"about/","text":"About PStomo PStomo is a seismic tomography program written in C that inverts first-arriving P (and S) wave arrival times to obtain a P (and S) wave velocity model. PStomo can use any combination of controlled sources (e.g. explosions) and natural sources (earthquakes). When using earthquakes, PStomo can jointly invert both for velocity structure and earthquake relocation. Authors The current version of PStomo has been developed by Ari Tryggvason, Department of Earth Sciences, Uppsala University, Uppsala, Sweden. The original program was created by Harley M. Benz at the U.S. Geological Survey. The finite difference algorithms were written by John Vidale, John Hole, Pascal Podvin and Isabel Lecomte (see the reference list). The (modified) LSQR algorithm was created by Paige and Saunders (1982). The (slightly modified) SVD algorithms are taken from Numerical Recipes in C (Press et al., 1988). Yao Zheng Shen created the algorithms for generating the output for computing the resolution matrix with LSQR (Yao, et al., 1999). Antonio Villase\u00f1or created initial versions of some of the GMT scripts used in the tutorial examples. License Choose a license such as MIT. References Benz, H. M., B.A. Chouet, P. B. Dawson, J. C. Lahr, R. A. Page, and J. A. Hole (1996). Three- dimensional P- and S-wave velocity structure of Redoubt Volcano, Alaska, J. geophys. Res., 101, 8111-8128. Hole, J. A. (1992). Nonlinear high-resolution three-dimensional seismic travel time tomography, J. geophys. Res., 97, 6553-6562. Hole, J. A., and B. C. Zelt (1995). 3-D finite-difference reflection traveltimes. Geophys. J. Int., 121, 427-434. Paige, C. C., and M. A. Saunders (1982). LSQR: An algorithm for sparse linear equations and sparse least squares. ACM Trans. Math. Software, 8, 43-71. Podvin, P., and I. Lecomte (1991). Finite difference computation of traveltimes in very contrasted velocity models. A massively parallel approach and its associated tools, Geophys. J. Int, 105, 271-284 Press, W. H., S. A. Teukolsky, W. T. Vetterling, and B. P. Flannery (1988). Numerical recipes in C, Cambridge University Press. Tryggvason, A., and N. Linde (2006). Local earthquake (LE) tomography with joint inversion for P- and S-wave velocities using structural constraints. Geophys. Res. Lett., 33, L07303, doi:10.1029/2005GL025485. Wessel. P., and W. H. F. Smith (1998). New improved version of Generic Mapping Tools released. EOS Trans. Amer. Geophys. U., 79(47), 579. Yao, Z. S., R. G. Roberts, and A. Tryggvason (1999). Calculating resolution and covariance matrixes for seismic tomography with the LSQR method. Geophys. J. Int, 138, 886-894, doi:10.1046/j.1365-246x.1999.00925.x.","title":"About"},{"location":"about/#about-pstomo","text":"PStomo is a seismic tomography program written in C that inverts first-arriving P (and S) wave arrival times to obtain a P (and S) wave velocity model. PStomo can use any combination of controlled sources (e.g. explosions) and natural sources (earthquakes). When using earthquakes, PStomo can jointly invert both for velocity structure and earthquake relocation.","title":"About PStomo"},{"location":"about/#authors","text":"The current version of PStomo has been developed by Ari Tryggvason, Department of Earth Sciences, Uppsala University, Uppsala, Sweden. The original program was created by Harley M. Benz at the U.S. Geological Survey. The finite difference algorithms were written by John Vidale, John Hole, Pascal Podvin and Isabel Lecomte (see the reference list). The (modified) LSQR algorithm was created by Paige and Saunders (1982). The (slightly modified) SVD algorithms are taken from Numerical Recipes in C (Press et al., 1988). Yao Zheng Shen created the algorithms for generating the output for computing the resolution matrix with LSQR (Yao, et al., 1999). Antonio Villase\u00f1or created initial versions of some of the GMT scripts used in the tutorial examples.","title":"Authors"},{"location":"about/#license","text":"Choose a license such as MIT.","title":"License"},{"location":"about/#references","text":"Benz, H. M., B.A. Chouet, P. B. Dawson, J. C. Lahr, R. A. Page, and J. A. Hole (1996). Three- dimensional P- and S-wave velocity structure of Redoubt Volcano, Alaska, J. geophys. Res., 101, 8111-8128. Hole, J. A. (1992). Nonlinear high-resolution three-dimensional seismic travel time tomography, J. geophys. Res., 97, 6553-6562. Hole, J. A., and B. C. Zelt (1995). 3-D finite-difference reflection traveltimes. Geophys. J. Int., 121, 427-434. Paige, C. C., and M. A. Saunders (1982). LSQR: An algorithm for sparse linear equations and sparse least squares. ACM Trans. Math. Software, 8, 43-71. Podvin, P., and I. Lecomte (1991). Finite difference computation of traveltimes in very contrasted velocity models. A massively parallel approach and its associated tools, Geophys. J. Int, 105, 271-284 Press, W. H., S. A. Teukolsky, W. T. Vetterling, and B. P. Flannery (1988). Numerical recipes in C, Cambridge University Press. Tryggvason, A., and N. Linde (2006). Local earthquake (LE) tomography with joint inversion for P- and S-wave velocities using structural constraints. Geophys. Res. Lett., 33, L07303, doi:10.1029/2005GL025485. Wessel. P., and W. H. F. Smith (1998). New improved version of Generic Mapping Tools released. EOS Trans. Amer. Geophys. U., 79(47), 579. Yao, Z. S., R. G. Roberts, and A. Tryggvason (1999). Calculating resolution and covariance matrixes for seismic tomography with the LSQR method. Geophys. J. Int, 138, 886-894, doi:10.1046/j.1365-246x.1999.00925.x.","title":"References"},{"location":"formats/","text":"File formats PStomo has 3 basic input files (in addition to the parameter file and the initial/starting model): station file : contains station coordinates in cartesian (flat Earth) projection source file : contains origin time and hypocenter of sources (earthquakes and/or controlled) in cartesian projection arrival time file : contains arrival times of P (and S) waves sorted by recording station Although it is not necessary, we follow this convention for naming the input files: all files have a .in extension all files begin with a common prefix, which is a short identifier of the project or region (e.g. ice for Iceland or ncal for Northern California) station file has the _stat suffix (e.g. ice_stat.in ) source file has the _src suffix (e.g. ice_src.in ) arrival time file has the _tt suffix (e.g. ice_tt.in ) Since we often have many more sources than stations, to reduce computing time inside PStomo travel times are calculated from the stations. Therefore the concept of source and receiver is reversed inside the code. Station list A station file contains lines with the following columns (one for each station): STATION_ID X Y Z MAX_DISTANCE NUMBER_ARRIVAL_TIMES USE_STATION FLAG STATION_CODE STATION_ID = numerical station ID (not passed to main) X = x coordinate in km Y = y coordinate in km Z = z coordinate in km (negative if above sea level) MAX_DISTANCE = distance (km) to furthest source recorded by this station (not passed to main) NUMBER_ARRIVAL_TIMES = number of arrival times for this station USE_STATION = use flag: 0 use, 1 do not use (WARNING: opposite to standard true/false convention) FLAG = additional flag (not passed to main) STATION_CODE = alphanumeric station code (not passed to main) 0 -33.59028 -4.31897 -0.79400 116.72459 1225 0 0 CADE 1 -42.17252 12.75307 -1.16000 150.92570 854 0 0 CBOL 2 -20.12271 2.41153 -2.21000 101.10428 2142 0 0 CCAN 3 -26.79712 2.82335 -2.06400 94.74211 1168 0 0 CCHO 4 -15.59873 9.43089 -2.10300 109.41433 827 0 0 CDIE 5 -33.25449 10.47509 -1.62600 111.62872 962 0 0 CDOS 6 -18.92852 12.64890 -2.11000 108.85104 762 0 0 CFOR Source locations A source file contains lines with the following columns (one for each source): SOURCE_ID YYMMDD HHMM SS.FF... X Y Z MAGNITUDE EVENT_TYPE EVENT_GROUP_ID FLAG SOURCE_ID = source number/ID (usually starts at 0 but not required?) YYMMDD = origin time year, month, and day for this source (WARNING: two-digit year) HHMM = origin time hour and minute for this source SS.FF... = origin time seconds and fractionary part (variable precision) X = x coordinate in km Y = y coordinate in km Z = z coordinate/focal depth in km (negative if above sea level) MAGNITUDE = event magnitude EVENT_TYPE = 0 for earthquakes, 1 for explosions (controlled source) EVENT_GROUP_ID = event group ID this source belongs to (if no event groups SOURCE_ID = EVENT_GROUP_ID ) FLAG = (passed to main but apparently not used) 0 040628 0342 29.90 -29.3320 9.4560 0.0000 1.90 0 0 0 1 040628 0423 48.20 -29.9220 9.0140 0.0000 1.90 0 1 0 2 040629 2125 53.40 -16.4760 13.3100 0.0000 2.70 0 2 0 3 040706 1855 57.60 -28.3670 2.8040 0.0000 1.70 0 3 0 4 040716 2152 3.70 -34.7100 15.7880 24.5000 1.60 0 4 0 5 040725 0059 41.60 -29.5290 9.2350 0.0000 1.80 0 5 0 6 040727 0514 10.60 -22.9390 18.6410 16.4000 2.40 0 6 0 7 040727 0514 44.40 -27.5580 13.5530 5.1000 2.60 0 7 0 8 040727 0531 10.50 -28.0430 15.2170 8.4000 1.80 0 8 0 9 040727 1747 38.80 -30.6180 5.6910 0.0000 1.40 0 9 0 10 040728 0029 27.00 -28.6480 9.0110 0.0000 1.60 0 10 0 11 040730 1111 51.00 -29.1360 9.6770 0.0000 2.50 0 11 0 Arrival times The arrival time file contains two types of lines: Station line The arrival time file must begin with a station line and must contain exactly as many station lines as stations listed in the station file (and in the same order). STATION_CODE NUMBER_ARRIVAL_TIMES STATION_CODE = station code (program does not check that it coincides with code in station file) NUMBER_ARRIVAL_TIMES = number of arrival times for this station (this exact same of number of arrival time lines must follow this station line) Arrival time line SOURCE_ID YYMMDD HHMM P_SECOND P_WEIGHT P_USE S_SECOND S_WEIGHT S_USE SOURCE_ID = source ID in source file this arrival time belongs to YYMMDD = year, month and day of arrival time (WARNING: two-digit year) HHMM = hour and minute of arrival time P_SECOND = second of P-wave arrival time P_WEIGHT = weight of P-wave arrival time (HYPO71 convention: 0 = full weigth, > 3 = do not use) P_USE = flag for using this P phase: 0 = use, > 0 do not use (WARNING: opposite to standard true/false convention) S_SECOND = second of S-wave arrival time (can be greater than 60 s if S arrival time does not occur in same minute as P arrival time). If S phase is not present then S_SECOND = 0.0 and S_WEIGHT = S_USE = 9 . S_WEIGHT = weight of S-wave arrival time (HYPO71 convention: 0 = full weigth, > 3 = do not use) S_USE = flag for using this S phase: 0 = use, > 0 do not use (WARNING: opposite to standard true/false convention) Although the station file lists STATION_ID and STATION_CODE , these values are not used nor checked against the values in the arrival time file. Instead the program assumes that the stations in the arrival time file appear in exactly the same order as in the station file. However NUMBER_ARRIVAL_TIMES in the arrival time file and in the station file must be the same, and is verified by the program. CADE 1225 371 170401 1657 10.550 1 0 17.120 2 0 372 170406 2350 7.840 1 0 9.660 2 0 373 170408 0846 17.160 1 0 0.000 9 9 374 170623 2148 26.150 1 0 28.430 2 0 375 170410 0101 14.790 1 0 20.740 2 0 378 170421 0450 26.430 1 0 33.150 2 0 379 170422 1416 25.160 1 0 30.520 2 0 380 170423 1932 12.340 1 0 14.430 2 0 381 170424 0201 31.170 1 0 32.550 2 0 386 170513 0126 30.780 1 0 33.070 2 0 389 170523 0029 22.760 1 0 24.840 2 0 . . . 2223 200406 2219 54.000 1 0 55.910 2 0 2224 200407 0335 37.460 1 0 42.790 2 0 2225 200407 2359 52.180 1 0 53.150 2 0 2226 200408 0612 20.060 1 0 25.330 2 0 CBOL 854 330 160803 2230 50.560 1 0 57.750 2 0 331 160831 0734 26.290 1 0 34.960 2 0 332 160927 2347 53.610 1 0 61.520 2 0 335 161003 1340 49.230 1 0 58.740 2 0 . . . Velocity model Ray coverage Output travel times","title":"File formats"},{"location":"formats/#file-formats","text":"PStomo has 3 basic input files (in addition to the parameter file and the initial/starting model): station file : contains station coordinates in cartesian (flat Earth) projection source file : contains origin time and hypocenter of sources (earthquakes and/or controlled) in cartesian projection arrival time file : contains arrival times of P (and S) waves sorted by recording station Although it is not necessary, we follow this convention for naming the input files: all files have a .in extension all files begin with a common prefix, which is a short identifier of the project or region (e.g. ice for Iceland or ncal for Northern California) station file has the _stat suffix (e.g. ice_stat.in ) source file has the _src suffix (e.g. ice_src.in ) arrival time file has the _tt suffix (e.g. ice_tt.in ) Since we often have many more sources than stations, to reduce computing time inside PStomo travel times are calculated from the stations. Therefore the concept of source and receiver is reversed inside the code.","title":"File formats"},{"location":"formats/#station-list","text":"A station file contains lines with the following columns (one for each station): STATION_ID X Y Z MAX_DISTANCE NUMBER_ARRIVAL_TIMES USE_STATION FLAG STATION_CODE STATION_ID = numerical station ID (not passed to main) X = x coordinate in km Y = y coordinate in km Z = z coordinate in km (negative if above sea level) MAX_DISTANCE = distance (km) to furthest source recorded by this station (not passed to main) NUMBER_ARRIVAL_TIMES = number of arrival times for this station USE_STATION = use flag: 0 use, 1 do not use (WARNING: opposite to standard true/false convention) FLAG = additional flag (not passed to main) STATION_CODE = alphanumeric station code (not passed to main) 0 -33.59028 -4.31897 -0.79400 116.72459 1225 0 0 CADE 1 -42.17252 12.75307 -1.16000 150.92570 854 0 0 CBOL 2 -20.12271 2.41153 -2.21000 101.10428 2142 0 0 CCAN 3 -26.79712 2.82335 -2.06400 94.74211 1168 0 0 CCHO 4 -15.59873 9.43089 -2.10300 109.41433 827 0 0 CDIE 5 -33.25449 10.47509 -1.62600 111.62872 962 0 0 CDOS 6 -18.92852 12.64890 -2.11000 108.85104 762 0 0 CFOR","title":"Station list"},{"location":"formats/#source-locations","text":"A source file contains lines with the following columns (one for each source): SOURCE_ID YYMMDD HHMM SS.FF... X Y Z MAGNITUDE EVENT_TYPE EVENT_GROUP_ID FLAG SOURCE_ID = source number/ID (usually starts at 0 but not required?) YYMMDD = origin time year, month, and day for this source (WARNING: two-digit year) HHMM = origin time hour and minute for this source SS.FF... = origin time seconds and fractionary part (variable precision) X = x coordinate in km Y = y coordinate in km Z = z coordinate/focal depth in km (negative if above sea level) MAGNITUDE = event magnitude EVENT_TYPE = 0 for earthquakes, 1 for explosions (controlled source) EVENT_GROUP_ID = event group ID this source belongs to (if no event groups SOURCE_ID = EVENT_GROUP_ID ) FLAG = (passed to main but apparently not used) 0 040628 0342 29.90 -29.3320 9.4560 0.0000 1.90 0 0 0 1 040628 0423 48.20 -29.9220 9.0140 0.0000 1.90 0 1 0 2 040629 2125 53.40 -16.4760 13.3100 0.0000 2.70 0 2 0 3 040706 1855 57.60 -28.3670 2.8040 0.0000 1.70 0 3 0 4 040716 2152 3.70 -34.7100 15.7880 24.5000 1.60 0 4 0 5 040725 0059 41.60 -29.5290 9.2350 0.0000 1.80 0 5 0 6 040727 0514 10.60 -22.9390 18.6410 16.4000 2.40 0 6 0 7 040727 0514 44.40 -27.5580 13.5530 5.1000 2.60 0 7 0 8 040727 0531 10.50 -28.0430 15.2170 8.4000 1.80 0 8 0 9 040727 1747 38.80 -30.6180 5.6910 0.0000 1.40 0 9 0 10 040728 0029 27.00 -28.6480 9.0110 0.0000 1.60 0 10 0 11 040730 1111 51.00 -29.1360 9.6770 0.0000 2.50 0 11 0","title":"Source locations"},{"location":"formats/#arrival-times","text":"The arrival time file contains two types of lines:","title":"Arrival times"},{"location":"formats/#station-line","text":"The arrival time file must begin with a station line and must contain exactly as many station lines as stations listed in the station file (and in the same order). STATION_CODE NUMBER_ARRIVAL_TIMES STATION_CODE = station code (program does not check that it coincides with code in station file) NUMBER_ARRIVAL_TIMES = number of arrival times for this station (this exact same of number of arrival time lines must follow this station line)","title":"Station line"},{"location":"formats/#arrival-time-line","text":"SOURCE_ID YYMMDD HHMM P_SECOND P_WEIGHT P_USE S_SECOND S_WEIGHT S_USE SOURCE_ID = source ID in source file this arrival time belongs to YYMMDD = year, month and day of arrival time (WARNING: two-digit year) HHMM = hour and minute of arrival time P_SECOND = second of P-wave arrival time P_WEIGHT = weight of P-wave arrival time (HYPO71 convention: 0 = full weigth, > 3 = do not use) P_USE = flag for using this P phase: 0 = use, > 0 do not use (WARNING: opposite to standard true/false convention) S_SECOND = second of S-wave arrival time (can be greater than 60 s if S arrival time does not occur in same minute as P arrival time). If S phase is not present then S_SECOND = 0.0 and S_WEIGHT = S_USE = 9 . S_WEIGHT = weight of S-wave arrival time (HYPO71 convention: 0 = full weigth, > 3 = do not use) S_USE = flag for using this S phase: 0 = use, > 0 do not use (WARNING: opposite to standard true/false convention) Although the station file lists STATION_ID and STATION_CODE , these values are not used nor checked against the values in the arrival time file. Instead the program assumes that the stations in the arrival time file appear in exactly the same order as in the station file. However NUMBER_ARRIVAL_TIMES in the arrival time file and in the station file must be the same, and is verified by the program. CADE 1225 371 170401 1657 10.550 1 0 17.120 2 0 372 170406 2350 7.840 1 0 9.660 2 0 373 170408 0846 17.160 1 0 0.000 9 9 374 170623 2148 26.150 1 0 28.430 2 0 375 170410 0101 14.790 1 0 20.740 2 0 378 170421 0450 26.430 1 0 33.150 2 0 379 170422 1416 25.160 1 0 30.520 2 0 380 170423 1932 12.340 1 0 14.430 2 0 381 170424 0201 31.170 1 0 32.550 2 0 386 170513 0126 30.780 1 0 33.070 2 0 389 170523 0029 22.760 1 0 24.840 2 0 . . . 2223 200406 2219 54.000 1 0 55.910 2 0 2224 200407 0335 37.460 1 0 42.790 2 0 2225 200407 2359 52.180 1 0 53.150 2 0 2226 200408 0612 20.060 1 0 25.330 2 0 CBOL 854 330 160803 2230 50.560 1 0 57.750 2 0 331 160831 0734 26.290 1 0 34.960 2 0 332 160927 2347 53.610 1 0 61.520 2 0 335 161003 1340 49.230 1 0 58.740 2 0 . . .","title":"Arrival time line"},{"location":"formats/#velocity-model","text":"","title":"Velocity model"},{"location":"formats/#ray-coverage","text":"","title":"Ray coverage"},{"location":"formats/#output-travel-times","text":"","title":"Output travel times"},{"location":"parameters/","text":"Parameters Model parameters h = size of travel time basic cell, identical in the X, Y, and Z directions (km) magX = number of travel cells that a model cell has in the X direction magY = number of travel cells that a model cell has in the Y direction magZ = number of travel cells that a model cell has in the Z direction nx = number of model cells in the X direction ( xlen = nx * magX * h ) ny = number of model cells in the Y direction ( ylen = ny * magY * h ) nz = number of model cells in the Z direction ( zlen = nz * magZ * h ) baseElev = top of the model in km (negative if above sea level) xmin = left edge of the model in km (default = 0.0) (not implemented!) ymin = bottom edge of the model in km (default = 0.0) (not implemented!) Input files srcfil = station file (it is called \"src\" because stations are treated as sources in main code) recvfil = source file (it is called \"recv\" because sources are treated as receivers in main code) obfile = arrival time file velfile = binary file containing input/initial P-wave velocity model velfile_s = binary file containing input/initial S-wave velocity model Travel time parameters maxres = maximum P residual in seconds maxsres = maximum S residual in seconds Inversion parameters invert = flag to invert for velocity model: 1 = true, 0 = false smoother = smoothing constraint (small for rough model, high for smooth model) ilsqr = maximum number of LSQR iterations max_cond_num = maximum condition number for LSQR truncater = SVD truncater UVout_flg = flag to dump Ritz vectors to obtain resolution matrix: 1 = true, 0 = false reortho_flg = flag to reorthog. Ritz vectors (if UVout_flg = 1 ): 1 = true, 0 = false Earthquake parameters no_shots = flag to indicate that dataset contains no explosions: 1 = true (no explosions), 0 = false (explosions) no_earthq = flag to indicate that datasets contains no earthquakes: 1 = true (no earthquakes), 0 = false (earthquakes) min_z = Vp/Vs parameters swave_flg = use S waves flag: 1 = true, 0 = false vps_ratio = Vp/Vs ratio (a priori?, use to regularize?) ps_wght_type = P/S wave weight flag: 0 = do not weight P and S residuals, 1 = weight based on variance, 2 = fixed weight ps_wght = weight to use when ps_wght_type = 2 p_res_var Output files ttlog = flag to ouput file with computed travel times Traveltime.log : 1 = true, 0 = false eqinfo = flag to output file with hypocenter errors: 1 = true, 0 = false To sort xwt = ywt = zwt = magz_u = z_u_lim = magz_l = z_l_lim = rel_only = loc_only = relative = maxOffset = minOffset = errlog = reslog = raylog = msd = interpolate = min_z = max_dh = max_dt = app_var = detail = det_z = det_magz = reduce = red_z = red_magx = red_magy = red_magz = variable_sm = auto_cov_lim = maxsmooth = minsmooth = maxcover = mincover = lnsmooth = Podvin_Lecomte = Podvin_Lecomte_msg = shotstat = max_stat = velzone = velzone_tres = vps_ratio = cross_grad = cross_grad_horiz = cross_grad_wght = use_pert_file = perturb_file = perturb_file_s = cross_grad_ext = cross_grad_ext_horiz = xg_ext_file = cross_grad_ex_wght = cross_grad_ext_ons = cross_grad_ex_inv = out_jacob = out_res = NETtomo = NETmodel = reg_only = loc_pdf_use = loc_pdf_name = loc_pdf_nx = loc_pdf_ny = loc_pdf_nz = loc_pdf_dx = loc_pdf_dy = loc_pdf_dz = vel_pdf_use = vel_pdf_name = vel_pdf_nx = vel_pdf_ny = vel_pdf_nz = vel_pdf_dx = vel_pdf_dy = vel_pdf_dz =","title":"Parameters"},{"location":"parameters/#parameters","text":"","title":"Parameters"},{"location":"parameters/#model-parameters","text":"h = size of travel time basic cell, identical in the X, Y, and Z directions (km) magX = number of travel cells that a model cell has in the X direction magY = number of travel cells that a model cell has in the Y direction magZ = number of travel cells that a model cell has in the Z direction nx = number of model cells in the X direction ( xlen = nx * magX * h ) ny = number of model cells in the Y direction ( ylen = ny * magY * h ) nz = number of model cells in the Z direction ( zlen = nz * magZ * h ) baseElev = top of the model in km (negative if above sea level) xmin = left edge of the model in km (default = 0.0) (not implemented!) ymin = bottom edge of the model in km (default = 0.0) (not implemented!)","title":"Model parameters"},{"location":"parameters/#input-files","text":"srcfil = station file (it is called \"src\" because stations are treated as sources in main code) recvfil = source file (it is called \"recv\" because sources are treated as receivers in main code) obfile = arrival time file velfile = binary file containing input/initial P-wave velocity model velfile_s = binary file containing input/initial S-wave velocity model","title":"Input files"},{"location":"parameters/#travel-time-parameters","text":"maxres = maximum P residual in seconds maxsres = maximum S residual in seconds","title":"Travel time parameters"},{"location":"parameters/#inversion-parameters","text":"invert = flag to invert for velocity model: 1 = true, 0 = false smoother = smoothing constraint (small for rough model, high for smooth model) ilsqr = maximum number of LSQR iterations max_cond_num = maximum condition number for LSQR truncater = SVD truncater UVout_flg = flag to dump Ritz vectors to obtain resolution matrix: 1 = true, 0 = false reortho_flg = flag to reorthog. Ritz vectors (if UVout_flg = 1 ): 1 = true, 0 = false","title":"Inversion parameters"},{"location":"parameters/#earthquake-parameters","text":"no_shots = flag to indicate that dataset contains no explosions: 1 = true (no explosions), 0 = false (explosions) no_earthq = flag to indicate that datasets contains no earthquakes: 1 = true (no earthquakes), 0 = false (earthquakes) min_z =","title":"Earthquake parameters"},{"location":"parameters/#vpvs-parameters","text":"swave_flg = use S waves flag: 1 = true, 0 = false vps_ratio = Vp/Vs ratio (a priori?, use to regularize?) ps_wght_type = P/S wave weight flag: 0 = do not weight P and S residuals, 1 = weight based on variance, 2 = fixed weight ps_wght = weight to use when ps_wght_type = 2 p_res_var","title":"Vp/Vs parameters"},{"location":"parameters/#output-files","text":"ttlog = flag to ouput file with computed travel times Traveltime.log : 1 = true, 0 = false eqinfo = flag to output file with hypocenter errors: 1 = true, 0 = false","title":"Output files"},{"location":"parameters/#to-sort","text":"xwt = ywt = zwt = magz_u = z_u_lim = magz_l = z_l_lim = rel_only = loc_only = relative = maxOffset = minOffset = errlog = reslog = raylog = msd = interpolate = min_z = max_dh = max_dt = app_var = detail = det_z = det_magz = reduce = red_z = red_magx = red_magy = red_magz = variable_sm = auto_cov_lim = maxsmooth = minsmooth = maxcover = mincover = lnsmooth = Podvin_Lecomte = Podvin_Lecomte_msg = shotstat = max_stat = velzone = velzone_tres = vps_ratio = cross_grad = cross_grad_horiz = cross_grad_wght = use_pert_file = perturb_file = perturb_file_s = cross_grad_ext = cross_grad_ext_horiz = xg_ext_file = cross_grad_ex_wght = cross_grad_ext_ons = cross_grad_ex_inv = out_jacob = out_res = NETtomo = NETmodel = reg_only = loc_pdf_use = loc_pdf_name = loc_pdf_nx = loc_pdf_ny = loc_pdf_nz = loc_pdf_dx = loc_pdf_dy = loc_pdf_dz = vel_pdf_use = vel_pdf_name = vel_pdf_nx = vel_pdf_ny = vel_pdf_nz = vel_pdf_dx = vel_pdf_dy = vel_pdf_dz =","title":"To sort"},{"location":"tutorials/","text":"Tutorial Example 1. Local earthquake tomography Example 2. Cross-hole tomography Example 3. Traveltime tomography with statics Other features of PStomo","title":"Tutorials"},{"location":"tutorials/#tutorial","text":"","title":"Tutorial"},{"location":"tutorials/#example-1-local-earthquake-tomography","text":"","title":"Example 1. Local earthquake tomography"},{"location":"tutorials/#example-2-cross-hole-tomography","text":"","title":"Example 2. Cross-hole tomography"},{"location":"tutorials/#example-3-traveltime-tomography-with-statics","text":"","title":"Example 3. Traveltime tomography with statics"},{"location":"tutorials/#other-features-of-pstomo","text":"","title":"Other features of PStomo"}]}